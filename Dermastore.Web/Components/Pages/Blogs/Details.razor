@page "/blogs/details"
@using Dermastore.Application.DTOs.Blogs
@using Dermastore.Application.Queries.Blogs.GetBlogById
@using Microsoft.EntityFrameworkCore
@using Dermastore.Domain.Entities
@using MediatR
@inject NavigationManager NavigationManager
@inject IMediator Mediator
<PageTitle>Blog Detail</PageTitle>

<style>
    .detail-card {
        max-width: 800px;
        margin: auto;
    }

    .card-header {
        background-color: #588157;
        color: white;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        padding: 1rem;
    }

        .card-header .btn {
            margin-bottom: 0.5rem;
        }

    .card-img-top {
        height: 300px;
        width: 100%;
        object-fit: cover;
    }
</style>

<div class="container my-5">
    <div class="detail-card">
        @if (blogDto is null)
        {
            <p class="text-center"><em>Loading...</em></p>
        }
        else
        {
            <div class="card shadow-sm">
                <div class="card-header">
                    <!-- Nút Back to List nằm trên Title -->
                    <a href="/blogs" class="btn btn-light text-primary">
                        Back to List
                    </a>
                    <h2 class="mb-0">@blogDto.Title</h2>
                </div>
                @* Thêm hình ảnh nếu có *@
                <img class="card-img-top" src="@(string.IsNullOrEmpty(blogDto.ImageUrl) ? "/images/default.png" : blogDto.ImageUrl)" alt="@blogDto.Title" />
                <div class="card-body">
                    <p class="card-text">@blogDto.Content</p>
                    <hr />
                    <div class="row justify-content-end">
                        <div class="col-auto text-end">
                            <strong>Date Published:</strong> @blogDto.DatePublished.ToString("dd/MM/yyyy")
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-white text-end">
                    <a href="@($"/blogs/edit?id={blogDto.Id}")" class="btn btn-outline-secondary me-2">Edit</a>
                    <a href="@($"/blogs/delete?id={blogDto.Id}")" class="btn btn-outline-secondary me-2">Delete</a>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private BlogDto? blogDto;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var query = new GetBlogQuery(Id);
        blogDto = await Mediator.Send(query);

        if (blogDto is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
