@page "/products/details"
@using Dermastore.Application.DTOs
@using Dermastore.Application.Queries.Products
@using Microsoft.EntityFrameworkCore
@using Dermastore.Domain.Entities
@inject NavigationManager NavigationManager
@using MediatR
@inject IMediator Mediator

<PageTitle>Product Details</PageTitle>

<div class="container mt-5">
    <div class="card shadow-lg p-4">
        <h2 class="text-center text-primary">Product Details</h2>
        <hr />

        @if (productDto is null)
        {
            <p class="text-center"><em>Loading...</em></p>
        }
        else {
            <dl class="row">
                <dt class="col-sm-4 fw-bold">Name</dt>
                <dd class="col-sm-8">@productDto.Name</dd>

                <dt class="col-sm-4 fw-bold">Description</dt>
                <dd class="col-sm-8">@productDto.Description</dd>

                <dt class="col-sm-4 fw-bold">Status</dt>
                <dd class="col-sm-8">@productDto.Status</dd>

                <dt class="col-sm-4 fw-bold">Quantity</dt>
                <dd class="col-sm-8">@productDto.Quantity</dd>

                <dt class="col-sm-4 fw-bold">Image</dt>
                <dd class="col-sm-8"><img src="@productDto.ImageUrl" alt="Product Image" class="img-fluid rounded" style="max-width: 200px;" /></dd>

                <dt class="col-sm-4 fw-bold">Category</dt>
                <dd class="col-sm-8">@productDto.Category</dd>
            </dl>

            <div class="d-flex justify-content-between">
                <a href="@($"/products/edit?id={productDto.Id}")" class="btn btn-warning">Edit</a>
                <a href="/products" class="btn btn-outline-secondary">Back to List</a>
            </div>
        }
    </div>
</div>

@code {
    private ProductDto? productDto;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var query = new GetProductQuery(Id);
        productDto = await Mediator.Send(query);

        if (productDto is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
