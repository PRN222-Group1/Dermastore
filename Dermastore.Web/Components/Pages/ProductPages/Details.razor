@page "/products/details"
@using Dermastore.Application.DTOs
@using Dermastore.Application.Queries.Products
@using Microsoft.EntityFrameworkCore
@using Dermastore.Domain.Entities
@inject NavigationManager NavigationManager
@using MediatR
@inject IMediator Mediator

<PageTitle>Chi tiết sản phẩm</PageTitle>

<h1 class="mb-4">Chi tiết sản phẩm</h1>

@if (productDto is null)
{
    <p class="text-muted">Đang tải...</p>
}
else
{
    <div class="card shadow-sm p-3">
        <div class="row">
            <div class="col-md-5">
                <img src="@productDto.ImageUrl" class="img-fluid rounded" alt="@productDto.Name" style="max-height: 300px; object-fit: cover;">
            </div>
            <div class="col-md-7">
                <div class="card-body">
                    <h4 class="card-title">@productDto.Name</h4>
                    <p class="text-muted">@productDto.Description</p>
                    <p><strong>Trạng thái:</strong> @productDto.Status</p>
                    <p><strong>Số lượng:</strong> @productDto.Quantity</p>
                    <p><strong>Danh mục:</strong> @productDto.Category</p>

                    <div class="mt-3">
                        <a href="@($"/products/edit?id={productDto.Id}")" class="btn btn-warning btn-sm">Chỉnh sửa</a>
                        <a href="@($"/products")" class="btn btn-secondary btn-sm">Quay lại danh sách</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private ProductDto? productDto;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var query = new GetProductQuery(Id);
        productDto = await Mediator.Send(query);

        if (productDto is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
